{"version":3,"sources":["Components/Tweets.js","Components/CustomMap.js","Components/Button.js","App.js","serviceWorker.js","index.js"],"names":["Tweets","_ref","className","id","react_default","a","createElement","dist","dataSource","sourceType","ownerScreenName","slug","options","chrome","linkColor","ariaPolite","theme","onLoad","console","log","CustomMap","loadMap","loadScript","concat","process","window","initMap","_this","styledMapType","google","maps","StyledMapType","elementType","stylers","color","visibility","featureType","weight","name","map","Map","document","getElementById","zoom","center","lat","lng","mapTypeControlOptions","mapTypeIds","TrafficLayer","setMap","TransitLayer","mapTypes","set","setMapTypeId","this","react","style","position","Component","url","index","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","Button","text","onClick","type","disabled","App","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleClick","e","css","state","toggleClasses","setState","isHidden","CustomMap_CustomMap","Tweets_Tweets","Button_Button","bind","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.51032385.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Timeline } from 'react-twitter-widgets';\r\n\r\nexport const Tweets = ({className, id}) => (\r\n\t\t\t<div id={id} className={className}>\r\n\t\t\t\t<Timeline\r\n\t\t\t\t\tdataSource={{\r\n\t\t\t\t\t\tsourceType: 'list',\r\n\t\t\t\t\t\townerScreenName: 'jakkTwoKays',\r\n\t\t\t\t\t\tslug: 'work-traffic-weather',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tchrome: 'noheader , nofooter , noborders , noscrollbar ',\r\n\t\t\t\t\t\tlinkColor: '#E81C4F',\r\n\t\t\t\t\t\tariaPolite: 'assertive',\r\n\t\t\t\t\t\ttheme: 'dark',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonLoad={() => console.log('Timeline is loaded!')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n)\r\n\r\n/* \r\nconst Twit = require('twit');\r\nconst T = new Twit({\r\n\tconsumer_key: 'REACT_APP_TWITTER_API ',\r\n\tconsumer_secret: 'REACT_APP_TWITTER_SECRET_API ',\r\n\taccess_token: 'REACT_APP_TWITTER_ACCESS_TOKEN',\r\n\taccess_token_secret: 'REACT_APP_TWITTER_SECRET_ACCESS_TOKEN ',\r\n});\r\n\r\nconst workArea = ['-112.12', '40.22', '-111.58', '40.78'];\r\nconst stream = T.stream('statuses/filter', {\r\n\tlocations: workArea,\r\n\ttrack: ['FR', 'UTA', 'I-15', 'TRAX'],\r\n\tlang: 'en',\r\n});\r\n\r\nstream.on('tweet', tweet => {\r\n\tconsole.log(tweet);\r\n}); \r\n\r\n\r\n\r\n*/\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nexport default class CustomMap extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.loadMap();\r\n\t}\r\n\r\n\tloadMap = () => {\r\n\t\tloadScript(\r\n\t\t\t`https://maps.googleapis.com/maps/api/js?key=${\r\n\t\t\t\tprocess.env.REACT_APP_GOOGLE_WEATHER_WORK_API\r\n\t\t\t}&region=US&callback=initMap`\r\n\t\t);\r\n\t\twindow.initMap = this.initMap;\r\n\t};\r\n\tinitMap = () => {\r\n\t\tconst styledMapType = new window.google.maps.StyledMapType(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#212121',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\telementType: 'labels.icon',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#757575',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\telementType: 'labels.text.stroke',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#212121',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'administrative',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#757575',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'administrative.country',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#9e9e9e',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'administrative.land_parcel',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'administrative.locality',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#bdbdbd',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'landscape.man_made',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#41fc6b',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#757575',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi.attraction',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi.business',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi.park',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#181818',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi.park',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#616161',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'poi.park',\r\n\t\t\t\t\telementType: 'labels.text.stroke',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#1b1b1b',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road',\r\n\t\t\t\t\telementType: 'geometry.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#2c2c2c',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#8a8a8a',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.arterial',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#373737',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.arterial',\r\n\t\t\t\t\telementType: 'labels',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweight: 2.5,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#3c3c3c',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway',\r\n\t\t\t\t\telementType: 'labels.text',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#6580fe',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway.controlled_access',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'on',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway.controlled_access',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#64b1ff',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway.controlled_access',\r\n\t\t\t\t\telementType: 'geometry.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#c0c0c0',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway.controlled_access',\r\n\t\t\t\t\telementType: 'geometry.stroke',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#0080ff',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweight: 3,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.highway.controlled_access',\r\n\t\t\t\t\telementType: 'labels',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.local',\r\n\t\t\t\t\telementType: 'labels',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'road.local',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#616161',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#aeae00',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'on',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweight: 3.5,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#ffff00',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweight: 3.5,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\telementType: 'geometry.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#ffff00',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'on',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\telementType: 'geometry.stroke',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'on',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#757575',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'transit.station.airport',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'water',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvisibility: 'off',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'water',\r\n\t\t\t\t\telementType: 'geometry',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#000000',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureType: 'water',\r\n\t\t\t\t\telementType: 'labels.text.fill',\r\n\t\t\t\t\tstylers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: '#3d3d3d',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\t{ name: 'Styled Map' }\r\n\t\t);\r\n\r\n\t\tlet options = {\r\n\t\t\tzoom: 11,\r\n\t\t\tcenter: { lat: 40.52467, lng: -111.863823 },\r\n\t\t\tmapTypeControlOptions: {\r\n\t\t\t\tmapTypeIds: ['none'],\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tlet map = new window.google.maps.Map(\r\n\t\t\tdocument.getElementById('map'),\r\n\t\t\toptions\r\n\t\t);\r\n\r\n\t\tlet trafficLayer = new window.google.maps.TrafficLayer();\r\n\t\ttrafficLayer.setMap(map);\r\n\r\n\t\tlet transitLayer = new window.google.maps.TransitLayer();\r\n\t\ttransitLayer.setMap(map);\r\n\r\n\t\tmap.mapTypes.set('styled_map', styledMapType);\r\n\t\tmap.setMapTypeId('styled_map');\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst divStyle = {\r\n\t\t\tposition: 'fixed'\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div id='map' style={divStyle} />\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet loadScript = url => {\r\n\tlet index = window.document.getElementsByTagName('script')[0];\r\n\tlet script = window.document.createElement('script');\r\n\tscript.src = url;\r\n\tscript.async = true;\r\n\tscript.defer = true;\r\n\tindex.parentNode.insertBefore(script, index);\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nexport const Button = ({ text, onClick, type, disabled, id }) => (\r\n\t<button id ={id} type={type} disabled={disabled} onClick={onClick}>\r\n\t\t{text}\r\n\t</button>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Tweets } from './Components/Tweets';\r\nimport MapApis from './Components/CustomMap';\r\nimport { Button } from './Components/Button';\r\nimport '../src/App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// this.toggleClick = this.toggleClick.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tisHidden: false,\r\n\t\t\ttoggleClasses: 'invisible',\r\n\t\t};\r\n\t}\r\n\r\n\t\r\n\ttoggleClick = e => {\r\n\t\tconsole.log('clicked');\r\n\t\tlet css = this.state.toggleClasses === 'visible' ? 'invisible' : 'visible';\r\n\t\tthis.setState(state => ({\r\n\t\t\tisHidden: !state.isHidden,\r\n\t\t\ttoggleClasses: css,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state);\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<MapApis />\r\n\t\t\t\t<Tweets className={this.state.toggleClasses} id='tweets' />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tid='toggler'\r\n\t\t\t\t\ttext='Toggle Me Baby'\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tonClick={this.toggleClick.bind(this)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}